/*
===============================================================
Script Purpose :
      This stored procedure performs the ELT(Extract, Transform, Load)
      process to populate the 'Silver' tables from the 'Bronze' table.
      
Actions Performed:
      -Truncates 'Silver' tables.
      -Inserts, Transforms and cleans data from 'Bronze' into the 'Silver' tables
      
Parameters:
      None.
      This stored procedure does not accept any parameters or freturn any values.
      
Usage Example: CALL Silver.Silver_load();
===============================================================
*/

DELIMITER //
CREATE PROCEDURE Silver.Silver_load()
BEGIN

INSERT INTO Silver.crm_cust_info(
cst_id,
cst_key,
cst_firstname,
cst_lastname,
cst_marital_status,
cst_gndr,
cst_create_date)

SELECT
cst_id,
cst_key,
TRIM(cst_firstname) AS cst_firstname,
TRIM(cst_lastname) AS cst_lastname,
CASE WHEN UPPER(TRIM(cst_gndr)) = "F" THEN "Female"
	WHEN UPPER(TRIM(cst_gndr)) = "M" THEN "Male"
    ELSE "n/a"
END cst_gndr,
CASE WHEN UPPER(TRIM(cst_marital_status)) = "S" THEN "Single"
	WHEN UPPER(TRIM(cst_marital_status)) = "M" THEN "Married"
    ELSE "n/a"
    END cst_marital_status,
cst_create_date
FROM(
SELECT *,
ROW_NUMBER() OVER(PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag_last
FROM Bronze.crm_cust_info
)AS Sub_query
WHERE flag_last = 1;

TRUNCATE TABLE Silver.crm_product_info;
INSERT INTO Silver.crm_product_info(
prd_id,
cat_id,
prd_key,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
)

SELECT 
prd_id,
REPLACE(SUBSTRING(prd_key, 1,5),'-','_') AS cat_id,
SUBSTRING(prd_key, 7) AS prd_key,
prd_nm,
IFNULL(prd_cost, 0) AS prd_cost,
CASE UPPER(TRIM(prd_line))
	WHEN "M" THEN "Mountain"
    WHEN "R" THEN "Road"
    WHEN "S" THEN "Other Sales"
    WHEN "T" THEN "Touring"
    ELSE "n/a"
END AS prd_line,
prd_start_dt,
LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)- INTERVAL 1 DAY AS prd_end_dt
FROM Bronze.crm_product_info;

TRUNCATE TABLE Silver.crm_sales_details;
INSERT INTO Silver.crm_sales_details(
sls_ord_num,
sls_prd_key,
sls_cust_id,
sls_order_dt,
sls_ship_dt,
sls_due_dt,
sls_sales,
sls_quantity,
sls_price
)
SELECT 
sls_ord_num,
sls_prd_key,
sls_cust_id,
CASE
	WHEN sls_order_dt = 0 OR LENGTH(sls_order_dt) != 8 THEN NULL
    ELSE CAST(sls_order_dt AS DATE)
END AS sls_order_dt,
CASE
	WHEN sls_ship_dt = 0 OR LENGTH(sls_ship_dt) != 8 THEN NULL
    ELSE CAST(sls_ship_dt AS DATE)
END AS sls_ship_dt,
CAST(sls_due_dt AS DATE) AS sls_due_dt,
CASE
	WHEN sls_sales IS NULL OR sls_sales <=0 OR sls_sales != sls_quantity * ABS(sls_price)
		THEN sls_quantity * ABS(sls_price)
	ELSE sls_sales
END AS sls_sales,
sls_quantity,
CASE 
	WHEN sls_price IS NULL OR sls_price <=0 THEN  sls_sales/ NULLIF(sls_quantity,0)
    ELSE sls_price
END AS sls_price
FROM Bronze.crm_sales_details;

TRUNCATE TABLE Silver.erp_cust_az12;
INSERT INTO Silver.erp_cust_az12(
cid,
bdate,
gen
)
SELECT
CASE
	WHEN cid LIKE "NAS%" THEN SUBSTRING(cid, 4)
    ELSE cid
END AS cid,
CASE
	WHEN bdate > current_date() THEN null
    ELSE bdate
END AS bdate,
CASE 
	WHEN UPPER(TRIM(gen)) IN ("F", "FEMALE") THEN "Female"
	WHEN UPPER(TRIM(gen)) IN ("M", "MALE") THEN "Male"
    ELSE "n/a"
END AS gen
FROM Bronze.erp_cust_az12;

TRUNCATE TABLE Silver.erp_loc_a101;
INSERT INTO Silver.erp_loc_a101(
cid,
cntry 
)
SELECT 
REPLACE(cid,"-", "") AS cid,
CASE
	WHEN TRIM(cntry) = "DE" THEN "Germany"
    WHEN TRIM(cntry) IN ("US", "USA") THEN "United States"
    WHEN TRIM(cntry) = ""  OR cntry IS NULL THEN "n/a"
    ELSE TRIM(cntry)
END AS cntry
FROM Bronze.erp_loc_a101;

TRUNCATE TABLE Silver.erp_px_cat_g1v2;
INSERT INTO Silver.erp_px_cat_g1v2(
id,
cat,
subcat,
maintenance
)
SELECT 
id,
cat,
subcat,
maintenance
FROM Bronze.erp_px_cat_g1v2;
END //

DELIMITER ;
